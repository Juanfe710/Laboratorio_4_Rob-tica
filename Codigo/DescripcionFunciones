##Descripción de las funciones usadas en el Código

El código implementado para la resolución del laboratorio se compone de 12 funciones. Repartidas en el arranque de ROS; sección en la que se declaran los parámetros de funcionamiento del robot y su conexión con Dynamixel, la interfaz gráfica; sección que se desarrolla con ayuda de Thinker y el movimiento del robot; sección que se encarga de darle las órdenes al robot de que realice las acciones.

<ul>
  <li><strong>__init__(self):</strong> Inicializa el nodo, configura parámetros, comunica con los servos y crea la GUI.</li>
  <li><strong>agregar_imagen_superior(self):</strong> Muestra una imagen PNG en la parte superior de la ventana.</li>
  <li><strong>agregar_nombres(self):</strong> Muestra los nombres del equipo debajo de la imagen.</li>
  <li><strong>create_buttons(self):</strong> Crea botones para mover el robot a posiciones predefinidas.</li>
  <li><strong>create_joint_labels(self):</strong> Crea etiquetas para mostrar las posiciones actuales de los servos.</li>
  <li><strong>enviar_posicion(self, nombre_posicion):</strong> Llama al movimiento de servos según la posición elegida.</li>
  <li><strong>move_to_position(self, goal_positions):</strong> Mueve los servos, apaga torque y actualiza pantalla.</li>
  <li><strong>read_current_positions(self):</strong> Lee las posiciones actuales en bits de cada servo.</li>
  <li><strong>update_joint_positions_display(self, positions):</strong> Muestra las posiciones en grados en la GUI.</li>
  <li><strong>convert_bits_to_degrees(self, bits):</strong> Convierte de bits a grados (-150° a 150°).</li>
  <li><strong>run(self):</strong> Inicia el ciclo principal de la ventana de Tkinter.</li>
  <li><strong>main(args=None):</strong> Ejecuta ROS 2, lanza la GUI y apaga ROS al cerrar.</li>
</ul>

